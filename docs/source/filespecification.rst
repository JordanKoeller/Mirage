
Reading and Writing Simulation Files
====================================

This tutorial is broken into two parts:

* High-level file i/o interface
* Low-level file i/o interface (the :class:`mirage.io` module)

For most purposes, the high-level interface should have all the functionality needed to use |Mirage|. Developers, however, should be familiar with the low-level interface.

High-level File I/O Interface
-----------------------------

Reading Specification Files
---------------------------

The |lens_analysis| module has a few functions that are very helpful for reading files generated by |Mirage| and returning the data inside. Probably the most common one is the :func:`load <mirage.lens_analysis.load>` function. This function is used to return the results of a computation in the form of a |Result| object for easy analysis.::
	
	>>> import mirage.lens_analysis as la
	>>> result = la.load("examples/qso2237.res")

The :func:`load <mirage.lens_analysis.load>` function can read any file made by |Mirage| with the `.res` extension.

If you want to load in a |Simulation| instance (either |Simulation| or |AnimationSimulation|), |lens_analysis| also includes the :func:`load_simulation <mirage.lens_analysis.load_simulation>` function for that purpose.::
	
	>>> sim = la.load_simulation("examples/qso2237Sim.sim")

The :func:`load_simulation <mirage.lens_analysis.load_simulation>` function can read and return |Simulation| instances from any file made by |Mirage| with an `.sim`, `.msim`, or `.res` extension.

.. note:: :func:`load_simulation <mirage.lens_analysis.load_simulation>` will return an |AnimationSimulation| if reading from a `.msim` file rather than a |Simulation| object.

.. note:: In the case where you are reading from a `.res` file, :func:`load_simulation <mirage.lens_analysis.load_simulation>` will only read the |Simulation| object used to run the computation, then close the file before looking at any of the actual computed results.

Lastly, |lens_analysis| also includes the :func:`describe <mirage.lens_analysis.describe>` function, which can be used to print a synopsis of the contents of a file.::
	
	>>> la.describe("examples/qso2237Sim.sim")

TODO