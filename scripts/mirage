#!/bin/bash
export PYTHONPATH="/home/jkoeller/Schoolwork/CS/PowerTools/Project/Mirage4PowerTools"
export PYTHONSTARTUP="/home/jkoeller/Schoolwork/CS/PowerTools/Project/Mirage4PowerTools/scripts/shell.py"
export JAR_LOC="/home/jkoeller/Schoolwork/CS/PowerTools/Project/Mirage4PowerTools/spark_mirage/target/scala-2.11/spark_mirage-assembly-beta.jar"
if [ "$1" = "--no-gui" ] || [ "$2" = "--no-gui" ]
then
	export LA_WITH_GUI="no"
else
	export LA_WITH_GUI="yes"
fi

#Commands: Local only or with the cluster

if [ "$1" = "-s" ] || [ "$1" = "--simulation" ]
then

	#Pull out the configuration variables
	MASTER=$(python -c 'from mirage import GlobalPreferences; print(GlobalPreferences["spark_configuration"]["master"])')
	DRIVER_MEMORY=$(python -c 'from mirage import GlobalPreferences; print(GlobalPreferences["spark_configuration"]["driver-memory"])')
	EXECUTOR_MEMORY=$(python -c 'from mirage import GlobalPreferences; print(GlobalPreferences["spark_configuration"]["executor-memory"])')
	EXTRA_ARGS="$(python -c 'from mirage import GlobalPreferences; print(GlobalPreferences["spark_configuration"]["command-line-args"] or "")')"
	export LA_IS_SIMULATION="true"
	cmd="pyspark --jars "$JAR_LOC" --conf spark.driver.maxResultSize="0" --master $MASTER --executor-memory $EXECUTOR_MEMORY --driver-memory $DRIVER_MEMORY "$EXTRA_ARGS""
	echo "$cmd"
	$cmd

elif [ "$1" = "-l" ] || [ "$1" = "--local" ]
then
	MASTER="local[*]"
	export LA_IS_SIMULATION="true"
	pyspark --master $MASTER --jars $JAR_LOC
else
	ipython
fi

